#!/usr/bin/env bash


#
hack_path='/home/minty/Documents/hackreactor/'
yes_no() {
  printf '%s\n%s\n%s\n\n' "press <enter> to accept default" "Y: $1" "n: $2"
  read -r -p "[Y/n]?: " response
  if [ "$response" = "n" ] || [ "$response" = "N" ]; then
    return 1
  else
    return 0
  fi
}

repo_list_sorted=$(gh repo list hackreactor --private |\
            awk '/hr-rfe/ {print $3, substr($1,13)}' | sort -r)
# this is way too much piping, should be able to do everything with awk?
repo_latest=$(echo "$repo_list_sorted" | sed -n '1p' | awk '{print $2}')
printf '\n%s\n\n' "latest repo: $repo_latest"
yes_no "this is the repo I want" "give me a bigger list"
if [ "$?" -eq 1 ]; then
  repo_list=$(gh repo list hackreactor --private |\
              awk -v ORS=" " '/hr-rfe/ {print substr($1,13)}')
  PS3="select HR repo: "
  select hack_repo in $repo_list; do
    case $hack_repo in
      *) printf '\n%s\n' "selected repo: ${hack_repo}"
         break;;
    esac
  done
else
  hack_repo="${repo_latest}"
fi
#repo_list=$(gh repo list hackreactor --private |\
#            awk -v ORS=" " '/hr-rfe/ {print $1}')
#repo_listed=$($repo_list | awk -v ORS=" " '/hr-rfe/ {print $1}')
#latest_repo="$($repo_list | awk '/hr-rfe/ {print $3, $1}' |\
#               sort -r | sed -n '1p')"
#echo $latest_repo
#exit 0
#PS3="select hackreactor repo: "
#select hack_repo in $repo_list; do
#  break
#done
printf '\n%s\n' "selected repo: $hack_repo"

# cd $hack_path
cd "$hack_path"

if [ "$1" = "up" ]; then
  gh pr create -R hackreactor/$mine_gitu
fi

if [ -d ./$hack_repo ]; then
  if [ "$hack_repo" = "hr-rfe2-toy-problems" ]; then
      printf '%s\n' "update your local copy of the toy problem repo?"
      printf '%s\n' "this will checkout your master branch"
      printf '%s\n' "and pull upstream master from HR"
      read -r -p "OK? (y/n)" response
      if [ "${response}" != "n" ]; then
        cd $hack_repo
        git remote add upstream "https://github.com/hackreactor/$hack_repo"
        git checkout master
        git pull upstream master
        exit 0
      fi
  else
    printf '%s\n' "dir exists!!!"
    exit 0
  # ask to overwrite?
  fi
else
  gh repo fork "hackreactor/$hack_repo"
  cd "$hack_repo"
fi
